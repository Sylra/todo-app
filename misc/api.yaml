openapi: 3.0.3
info:
  title: TODO App API
  version: 1.0.0
servers:
  - url: http://localhost:8080/
tags:
  - name: Accounts
    description: Account registration and login
  - name: Lists
    description: Manage task lists
  - name: Tasks
    description: Manage individual tasks

paths:
  /users:
    post:
      tags: [Accounts]
      summary: Create account
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
              required: [email, password]
      responses:
        '201':
          description: Account created

  /login:
    post:
      tags: [Accounts]
      summary: Login account
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required: [email, password]
      responses:
        '200':
          description: Login successful
        '401':
          description: Unauthorized

  /lists:
    post:
      tags: [Lists]
      summary: Create list
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
              required: [title]
      responses:
        '201':
          description: List created
        '401':
          $ref: '#/components/responses/UnauthorizedError'

  /lists/{listId}:
    patch:
      tags: [Lists]
      summary: Update list
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: listId
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
      responses:
        '200':
          description: List updated
        '401':
          $ref: '#/components/responses/UnauthorizedError'

    delete:
      tags: [Lists]
      summary: Remove list
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: listId
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: List deleted
        '401':
          $ref: '#/components/responses/UnauthorizedError'

    get:
      tags: [Lists]
      summary: Get all lists with tasks
      security:
        - bearerAuth: []
      responses:
        '200':
          description: An array of lists with their tasks
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    title:
                      type: string
                    active:
                      type: boolean
                    tasks:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: integer
                          name:
                            type: string
                          completed:
                            type: boolean
        '401':
          $ref: '#/components/responses/UnauthorizedError'

  /lists/{listId}/archive:
    post:
      tags: [Lists]
      summary: Archive list
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: listId
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: List archived
        '401':
          $ref: '#/components/responses/UnauthorizedError'

  /lists/{listId}/tasks:
    post:
      tags: [Tasks]
      summary: Create task
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: listId
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
              required: [name]
      responses:
        '201':
          description: Task created
        '401':
          $ref: '#/components/responses/UnauthorizedError'

  /tasks/{taskId}:
    patch:
      tags: [Tasks]
      summary: Update task
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: taskId
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
      responses:
        '200':
          description: Task updated
        '401':
          $ref: '#/components/responses/UnauthorizedError'

    delete:
      tags: [Tasks]
      summary: Remove task
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: taskId
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Task deleted
        '401':
          $ref: '#/components/responses/UnauthorizedError'

  /tasks/{taskId}/complete:
    post:
      tags: [Tasks]
      summary: Complete task
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: taskId
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Task marked as completed
        '401':
          $ref: '#/components/responses/UnauthorizedError'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  responses:
    UnauthorizedError:
      description: Unauthorized – Bearer token is missing or invalid
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: Unauthorized – Bearer token is missing or invalid
